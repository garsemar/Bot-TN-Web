import {
    AuthAction,
    withAuthUser,
    withAuthUserTokenSSR,
} from 'next-firebase-auth';
import Link from 'next/link';
import { useState } from 'react';
import { useRouter } from 'next/router';
import Navbar from './modules/Navbar';
import Head from 'next/head';

const EditEvent = () => {
    const [rows, setRows] = useState({});
    const router = useRouter()
    let item

    const getRows = () => {
        item = router.query
    };

    getRows()

    const handleSubmit = async (event) => {
        event.preventDefault();
        const id = event.target.id.value;
        const titulo = event.target.nom.value;
        const informacion = event.target.informacion.value;
        const links = event.target.contacto.value;

        fetch("https://bottn.glitch.me/api/events", {
            method: 'PUT',
            body: JSON.stringify({ id: id, titulo: titulo, informacion: informacion, links: links}),
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(res => res.json())
            .catch(error => console.error('Error:', error));

        router.push("/events")
    };

    return (
        <div id="all">
            <Head>
                <title>Editar item</title>
                <meta charset="UTF-8" />
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar />
            <div className='addDiv'>
                <form className='editForm' method="post" onSubmit={handleSubmit}>
                    <input type="hidden" defaultValue={item.id} name='id' />
                    <input type="text" defaultValue={item.titulo} name='nom' className='addName' placeholder="Nom" />
                    <textarea type="text" defaultValue={item.informacion} name='informacion' className='addName' placeholder="Informacion" />
                    <input type="text" defaultValue={item.links} name='contacto' className='addName' placeholder="Contacto" />
                    <br></br>
                    <button id="add_category" className='addNameButton'>Guardar</button>
                    <br></br>
                    <Link className='addNameButton' id='cancelButton' href="/events">Cancel</Link>
                </form>
                <div id="bodyAdmin">

                </div>
            </div>
            <div>
            </div>
        </div>
    );
};

// Note that this is a higher-order function.
export const getServerSideProps = withAuthUserTokenSSR({
    whenUnauthed: AuthAction.REDIRECT_TO_LOGIN
})(() => {
    return {
        props: {}
    }
})

export default withAuthUser({
    whenUnauthedAfterInit: AuthAction.REDIRECT_TO_LOGIN
})(EditEvent)