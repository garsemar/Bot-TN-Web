import {
  AuthAction,
  useAuthUser,
  withAuthUser,
  withAuthUserTokenSSR,
} from 'next-firebase-auth';
import Head from 'next/head';
import Link from 'next/link';
import { useState, useRef } from "react";

// <p>Your email is {AuthUser.email ? AuthUser.email : 'unknown'}.</p>
//

const editCat = (event) => {
  let input = prompt("Nom de la categoria:");
  if (input == null || input == "") {
    input = "User cancelled the prompt.";
  }
  console.log(input)
}

const Form = () => {
  const AuthUser = useAuthUser()

  const [opcionSeleccionada, setOpcionSeleccionada] = useState('Eventos');

  const handleChange = (e) => {
    setOpcionSeleccionada(e.target.value);
  };

  return (
    <div>
      <Head>
        <title>Creación</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div id="all">
        <div id="form_body">
          <div id="form-div">
            <form className='w-full flex' method="post" action="/api/upload" enctype="multipart/form-data">
              <div>
                <label>Eventos<input type="radio" value="Eventos" checked={opcionSeleccionada === 'Eventos'} onChange={handleChange}></input></label>
                <label>Noticias<input type="radio" value="Noticias" checked={opcionSeleccionada === 'Noticias'} onChange={handleChange}></input></label>
              </div>
              <input type="text" id="title_noticia" name="titular" className='title_noticia' placeholder="Titular..." />
              <textarea type="text" id="text_noticia" name="infor" className='text_noticia' rows="10" placeholder="Información..."></textarea>


              <input type="submit" id='add-button' value="Añadir" />
            </form>
            <div id='atras_div'>
              <Link className='atras_button' href="events">Atras</Link>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

// Note that this is a higher-order function.
export const getServerSideProps = withAuthUserTokenSSR({
  whenUnauthed: AuthAction.REDIRECT_TO_LOGIN
})(() => {
  return {
    props: {}
  }
})

export default withAuthUser({
  whenUnauthedAfterInit: AuthAction.REDIRECT_TO_LOGIN
})(Form)
