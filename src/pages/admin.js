import {
  AuthAction,
  useAuthUser,
  withAuthUser,
  withAuthUserTokenSSR,
} from 'next-firebase-auth';
import firebase from 'firebase/app';
import Head from 'next/head';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import conn from './lib/db';

// <p>Your email is {AuthUser.email ? AuthUser.email : 'unknown'}.</p>
//

const Demo = () => {
  let [tableName, setTableName] = useState("")
  const editCat = () => {
    let input = prompt("Nom de la categoria:");
    if (input == null || input == "" || input.length > 500) {
      setTableName("Error!");
    }
    else {
      setTableName(input);
    }
  }

  const getTables = async () => {
    let tables = {}
    await conn.query("SELECT id, nom FROM categories")
      .then(response => {
        response.rows.forEach(element => {
          tables[element.id] = element.nom
        });
      })
      .catch(err => {
        client.end()
      })
    await Promise.all(tables)
    return await tables
  }

  useEffect(() => {
    document.getElementById("nameCat").value = tableName
  })

  const AuthUser = useAuthUser()
  return (
    <div>
      <Head>
        <title>garsemar</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div id="all">
        <div id="cabecera">
          <div id="title_cabecera">
            <Link href="/" className="homeLink">
              Bot Trinitat Nova
            </Link>
          </div>
          <Link onClick={() => firebase.auth().signOut()} href="" id="login_cabecera">LOG OUT</Link>
        </div>
        <div>
          <form action="/createCat" method="post">
            <input type="text" id="new_category" placeholder="Nom de la categoria" required />
            <input type="submit" id="add_category" value="Afegir" />
          </form>
          <div id="bodyAdmin">
            <table>
              {(async () => {
                await getTables().forEach(element => {
                  <tr>
                    <td id='nameCat'>{tableName}</td>
                    <td><Link href="" onClick={editCat}>Edit</Link></td>
                    <td><Link href="/api/deleteCat?id=1">Delete</Link></td>
                  </tr>
                })
              })()}
            </table>
          </div>
        </div>
        <div className="footer-basic">
          <div>
            <Link href="#">Condiciones de uso</Link>
            <Link href="#">Políticas de privacidad</Link>
            <Link href="#">Políticas de cookies</Link>
            <Link href="#">Accesibildad</Link>
          </div>
        </div>
      </div>
    </div>
  )
}

// Note that this is a higher-order function.
export const getServerSideProps = withAuthUserTokenSSR({
  whenUnauthed: AuthAction.REDIRECT_TO_LOGIN
})(() => {
  return {
    props: {}
  }
})

export default withAuthUser({
  whenUnauthedAfterInit: AuthAction.REDIRECT_TO_LOGIN
})(Demo)