import {
  AuthAction,
  useAuthUser,
  withAuthUser,
  withAuthUserTokenSSR,
} from 'next-firebase-auth';
import firebase from 'firebase/app';
import Head from 'next/head';
import Link from 'next/link';

// <p>Your email is {AuthUser.email ? AuthUser.email : 'unknown'}.</p>
//

const editCat = (event) => {
  let input = prompt("Nom de la categoria:");
  if (input == null || input == "") {
    input = "User cancelled the prompt.";
  }
  console.log(input)
}

const Demo = () => {
  const AuthUser = useAuthUser()
  return (
    <div>
      <Head>
        <title>Administraci√≥n</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div id="all">
        <div id="cabecera">
          <div id="title_cabecera">
            <Link href="/" className="homeLink">
              Bot Trinitat Nova
            </Link>
          </div>
          <a onClick={() => firebase.auth().signOut()} id="login_cabecera">LOG OUT</a>
        </div>
        <div id='buttons_go'>
          <div id="go_events">
            <a href='events'>Eventos y noticias</a>
          </div>
          <div id="go_events">
            <a href='date'>Calendario</a>
          </div>
        </div>
        <div>
          <div className='addDiv'>
            <form action="/createCat" method="post">
              <input type="text" id="new_category" className='addName' placeholder="Nom de la categoria" required />
              <input type="submit" id="add_category" className='addNameButton' value="Afegir" />
            </form>
          </div>
          <div id="bodyAdmin">
            <table>
              <tr>
                <td className='nameSql' name="nameCat" id='nameCat'>table</td>
                <td className='editSql'><Link href="" onClick={editCat}>Edit</Link></td>
                <td className='editSql'><Link href="/api/deleteCat?id=1">Delete</Link></td>
              </tr>
            </table>
          </div>
        </div>
      </div>
    </div>
  )
}

// Note that this is a higher-order function.
export const getServerSideProps = withAuthUserTokenSSR({
  whenUnauthed: AuthAction.REDIRECT_TO_LOGIN
})(() => {
  return {
    props: {}
  }
})

export default withAuthUser({
  whenUnauthedAfterInit: AuthAction.REDIRECT_TO_LOGIN
})(Demo)